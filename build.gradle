buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath('org.freemarker:freemarker:2.3.23')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework:spring-context-support")
    // end::actuator[]
    compile("org.freemarker:freemarker")

    testCompile group: 'org.testng', name: 'testng', version: '6.9.8'
    testCompile 'com.jayway.jsonpath:json-path:2.0.0'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

test {
    useTestNG{
        suites 'src/test/resources/testng.xml'
        useDefaultListeners = true
    }
}

/*jar {
    //baseName = 'gs-gradle'
    //version =  '0.1.0'
    manifest {
        attributes 'Main-Class': 'com.liuwill.SpringBootDemo.Application'
    }
}*/

task createJavaProject << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs()}
}

/*task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}*/

/*
task createWebProject(dependsOn: 'createJavaProject') << {
    def webAppDir = file("$webAppDirName")
    webAppDir.mkdirs()
}*/
